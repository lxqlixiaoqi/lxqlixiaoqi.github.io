// ÂàùÂßãÂåñSupabaseÂÆ¢Êà∑Á´Ø
const supabaseUrl = 'https://xlifqkkeewtsejxrrabg.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InhsaWZxa2tlZXd0c2VqeHJyYWJnIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDU2MDI1NjYsImV4cCI6MjA2MTE3ODU2Nn0.n8L-yTNGd4W82Ax7M9_6MdfcH73nRSx5zW6kzrDw5Hc';
const supabase = supabase.createClient(supabaseUrl, supabaseKey, {
  global: {
    headers: {
      'Access-Control-Allow-Origin': '*',
      'Access-Control-Allow-Headers': 'authorization, x-client-info, apikey, content-type',
      'Access-Control-Allow-Methods': 'POST, GET, OPTIONS, DELETE, PUT'
    }
  }
});

// Âä†ËΩΩÂéÜÂè≤Êó•ËÆ∞
async function loadDiaryHistory() {
  const { data, error } = await supabase
    .from('diaries')
    .select('*')
    .order('created_at', { ascending: false });
    
  if (!error && data) {
    const historyContainer = document.querySelector('.diary-history');
    if (historyContainer) {
      historyContainer.innerHTML = data.map(diary => 
        `<div class="diary-item">
          <div class="diary-date">${new Date(diary.created_at).toLocaleString()}</div>
          <div class="diary-weather">${weatherEmoji[diary.weather] || ''}</div>
          <div class="diary-mood">${moodEmoji[diary.mood] || ''}</div>
          <div class="diary-content">${diary.content}</div>
        </div>`
      ).join('');
    }
  }
}

// È°µÈù¢Âä†ËΩΩÊó∂Ëé∑ÂèñÂéÜÂè≤ËÆ∞ÂΩï
window.addEventListener('load', loadDiaryHistory);

// Ë°®ÊÉÖÈÖçÁΩÆ
const weatherEmoji = {
  sunny: '‚òÄÔ∏è',
  cloudy: '‚òÅÔ∏è',
  rainy: 'üåßÔ∏è',
  snowy: '‚ùÑÔ∏è'
};

const moodEmoji = {
  happy: 'üòä',
  sad: 'üò¢',
  angry: 'üò†',
  calm: 'üòå'
};

// ÂàùÂßãÂåñÂØåÊñáÊú¨ÁºñËæëÂô®
if (typeof quill === 'undefined') {
  var quill = new Quill('#editor', {
    theme: 'snow',
    modules: {
      toolbar: '#toolbar'
    },
    placeholder: 'ËÆ∞ÂΩïÂ±û‰∫é‰Ω†ÁöÑÈ≠îÊ≥ïÊó∂Âàª...‚ú®'
  });
}

// Â§ÑÁêÜÊó•ËÆ∞‰øùÂ≠ò
document.querySelector('.save-button').addEventListener('click', async () => {
  const content = quill.root.innerHTML;
  const weather = document.getElementById('weather').value;
  const mood = document.getElementById('mood').value;
  
  // Á°Æ‰øùÂÜÖÂÆπ‰ª•HTMLÊ†ºÂºèÂ≠òÂÇ®
  const htmlContent = quill.root.innerHTML;

  // Ê∑ªÂä†ÂÖÉÁ¥†Â≠òÂú®ÊÄßÊ£ÄÊü•
  if(!document.querySelector('.save-button')) {
    console.error('‰øùÂ≠òÊåâÈíÆÂÖÉÁ¥†Êú™ÊâæÂà∞');
    return;
  }

  try {
    // Ê∑ªÂä†ÁΩëÁªúËøûÊé•Ê£ÄÊµã
    if(!navigator.onLine) {
      alert('‚ö†Ô∏è ÁΩëÁªúËøûÊé•‰∏çÂèØÁî®');
      return;
    }

    // ‰øùÂ≠òÊó•ËÆ∞Âà∞Supabase
    // Ê∏ÖÁêÜQuillÁîüÊàêÁöÑHTMLÂÜÖÂÆπÔºåÁßªÈô§‰∏çÂøÖË¶ÅÁöÑÊ†∑ÂºèÂíåÁ±ª
    const cleanHtmlContent = htmlContent
      .replace(/class=".*?"/g, '')
      .replace(/style=".*?"/g, '');

    const { data, error } = await supabase
      .from('diaries')
      .insert([
        {
          content: cleanHtmlContent,
          weather,
          mood,
          created_at: new Date().toISOString()
        }
      ]);
      
    if (error) {
      console.error('‰øùÂ≠òÂ§±Ë¥•:', error);
      throw new Error(`‰øùÂ≠òÂ§±Ë¥•: ${error.message}`);
    }

    alert('Êó•ËÆ∞‰øùÂ≠òÊàêÂäüÔºÅ‚ú®');
    quill.setContents([]); // Ê∏ÖÁ©∫ÁºñËæëÂô®ÂÜÖÂÆπ
    document.getElementById('weather').value = '';
    document.getElementById('mood').value = '';
    loadDiaries(); // Âà∑Êñ∞Êó•ËÆ∞ÂàóË°®
  } catch (error) {
    console.error('‰øùÂ≠òÊó•ËÆ∞Êó∂Âá∫Èîô:', error);
    alert(`‰øùÂ≠òÂ§±Ë¥•: ${error.message}`);
  }
});

// Âä†ËΩΩÂéÜÂè≤Êó•ËÆ∞
async function loadDiaries() {
  try {
    const { data, error } = await supabase
      .from('diaries')
      .select('*')
      .order('created_at', { ascending: false });
      
    if (error) {
      console.error('Ëé∑ÂèñÊó•ËÆ∞Â§±Ë¥•:', error);
      throw new Error(`Ëé∑ÂèñÊó•ËÆ∞Â§±Ë¥•: ${error.message}`);
    }
    
    const diaries = data;
    const container = document.querySelector('.diary-list');
    diaries.reverse().forEach(diary => {
      const card = document.createElement('div');
      card.className = 'diary-card card';
      card.innerHTML = `
        <div class="diary-meta">
          <span class="weather">${weatherEmoji[diary.weather]}</span>
          <span class="mood">${moodEmoji[diary.mood]}</span>
          <span class="date">${new Date(diary.created_at).toLocaleString()}</span>
        </div>
        <div class="diary-content">${diary.content}</div>
      `;
      container.prepend(card);
    });
  } catch (error) {
    console.error('Âä†ËΩΩÂ§±Ë¥•:', {
      message: error.message,
      stack: error.stack,
      url: `${DIARY_ENDPOINT}/latest?meta=false`,
      method: 'GET',
      headers: {
        'X-Master-Key': '***'+DIARY_API_KEY.slice(-6),
        'Content-Type': 'application/json',
        'X-Bin-Meta': 'false'
      }
    });
  }
}

// ÂàùÂßãÂåñÂä†ËΩΩ
window.addEventListener('DOMContentLoaded', loadDiaries);