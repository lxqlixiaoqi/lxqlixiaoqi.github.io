// ÂºïÂÖ• MySQL ËøûÊé•Â∫ì
const mysql = require('mysql2/promise');

// ÂàõÂª∫ MySQL ËøûÊé•Ê±†
const pool = mysql.createPool({
    host: 'sql309.infinityfree.com',
    user: 'if0_39452447',
    password: 'wyz831201',
    database: 'if0_39452447_lxqdata',
    port: 3306
});

// ÂàùÂßãÂåñÊó∂ÂàõÂª∫ diaries Ë°®
(async () => {
    try {
        await pool.execute(`
            CREATE TABLE IF NOT EXISTS diaries (
                id INT AUTO_INCREMENT PRIMARY KEY,
                content TEXT NOT NULL,
                weather VARCHAR(50) NOT NULL,
                mood VARCHAR(50) NOT NULL,
                created_at DATETIME NOT NULL
            )
        `);
        console.log('diaries Ë°®ÂàõÂª∫ÊàêÂäüÊàñÂ∑≤Â≠òÂú®');
    } catch (error) {
        console.error('ÂàõÂª∫ diaries Ë°®Êó∂Âá∫Èîô:', error);
    }
})();

// Âä†ËΩΩÂéÜÂè≤Êó•ËÆ∞
async function loadDiaryHistory() {
    try {
        const [rows] = await pool.execute(
            'SELECT * FROM diaries ORDER BY created_at DESC'
        );
        if (rows) {
            const historyContainer = document.querySelector('.diary-history');
            if (historyContainer) {
                historyContainer.innerHTML = rows.map(diary => 
                    `<div class="diary-item">
                      <div class="diary-date">${new Date(diary.created_at).toLocaleString()}</div>
                      <div class="diary-weather">${weatherEmoji[diary.weather] || ''}</div>
                      <div class="diary-mood">${moodEmoji[diary.mood] || ''}</div>
                      <div class="diary-content">${diary.content}</div>
                    </div>`
                ).join('');
            }
        }
    } catch (error) {
        console.error('Âä†ËΩΩÂéÜÂè≤Êó•ËÆ∞Êó∂Âá∫Èîô:', error);
    }
}

// È°µÈù¢Âä†ËΩΩÊó∂Ëé∑ÂèñÂéÜÂè≤ËÆ∞ÂΩï
window.addEventListener('load', loadDiaryHistory);

// Ë°®ÊÉÖÈÖçÁΩÆ
const weatherEmoji = {
  sunny: '‚òÄÔ∏è',
  cloudy: '‚òÅÔ∏è',
  rainy: 'üåßÔ∏è',
  snowy: '‚ùÑÔ∏è'
};

const moodEmoji = {
  happy: 'üòä',
  sad: 'üò¢',
  angry: 'üò†',
  calm: 'üòå'
};

// ÂàùÂßãÂåñÂØåÊñáÊú¨ÁºñËæëÂô®
if (typeof quill === 'undefined') {
  var quill = new Quill('#editor', {
    theme: 'snow',
    modules: { toolbar: '#toolbar' },
    placeholder: 'ËÆ∞ÂΩïÂ±û‰∫é‰Ω†ÁöÑÈ≠îÊ≥ïÊó∂Âàª...‚ú®'
  });
}

// Â§ÑÁêÜÊó•ËÆ∞‰øùÂ≠ò
document.querySelector('.save-button').addEventListener('click', async () => {
  const content = quill.root.innerHTML;
  const weather = document.getElementById('weather').value;
  const mood = document.getElementById('mood').value;
  
  // Á°Æ‰øùÂÜÖÂÆπ‰ª•HTMLÊ†ºÂºèÂ≠òÂÇ®
  const htmlContent = quill.root.innerHTML;

  // Ê∑ªÂä†ÂÖÉÁ¥†Â≠òÂú®ÊÄßÊ£ÄÊü•
  if(!document.querySelector('.save-button')) {
    console.error('‰øùÂ≠òÊåâÈíÆÂÖÉÁ¥†Êú™ÊâæÂà∞');
    return;
  }

  try {
    // Ê∑ªÂä†ÁΩëÁªúËøûÊé•Ê£ÄÊµã
    if(!navigator.onLine) {
      alert('‚ö†Ô∏è ÁΩëÁªúËøûÊé•‰∏çÂèØÁî®');
      return;
    }

    // Ê∏ÖÁêÜQuillÁîüÊàêÁöÑHTMLÂÜÖÂÆπÔºåÁßªÈô§‰∏çÂøÖË¶ÅÁöÑÊ†∑ÂºèÂíåÁ±ª
    const cleanHtmlContent = htmlContent
      .replace(/class=".*?"/g, '')
      .replace(/style=".*?"/g, '');

    const created_at = new Date().toISOString();
    // ÂèëÈÄÅÂà∞PHPÂêéÁ´Ø‰øùÂ≠ò
    const response = await fetch('/save-diary.php', {
      method: 'POST',
      headers: {'Content-Type': 'application/json'},
      body: JSON.stringify({
        content: cleanHtmlContent,
        weather: weather,
        mood: mood,
        created_at: created_at
      })
    });

    const data = await response.json();
    if (data.success) {
      alert('Êó•ËÆ∞‰øùÂ≠òÊàêÂäüÔºÅ‚ú®');
      quill.setContents([]); // Ê∏ÖÁ©∫ÁºñËæëÂô®ÂÜÖÂÆπ
      document.getElementById('weather').value = '';
      document.getElementById('mood').value = '';
      loadDiaries(); // Âà∑Êñ∞Êó•ËÆ∞ÂàóË°®
    } else {
      alert(`‰øùÂ≠òÂ§±Ë¥•: ${data.error}`);
    }
  } catch (error) {
    console.error('‰øùÂ≠òÊó•ËÆ∞Êó∂Âá∫Èîô:', error);
    alert(`‰øùÂ≠òÂ§±Ë¥•: ${error.message}`);
  }
});

// Âä†ËΩΩÂéÜÂè≤Êó•ËÆ∞
async function loadDiaries() {
  try {
    const [rows] = await pool.execute(
      'SELECT * FROM diaries ORDER BY created_at DESC'
    );
    
    const diaries = rows;
    const container = document.querySelector('.diary-list');
    diaries.reverse().forEach(diary => {
      const card = document.createElement('div');
      card.className = 'diary-card card';
      card.innerHTML = `
        <div class="diary-meta">
          <span class="weather">${weatherEmoji[diary.weather]}</span>
          <span class="mood">${moodEmoji[diary.mood]}</span>
          <span class="date">${new Date(diary.created_at).toLocaleString()}</span>
        </div>
        <div class="diary-content">${diary.content}</div>
      `;
      container.prepend(card);
    });
  } catch (error) {
    console.error('Âä†ËΩΩÂ§±Ë¥•:', {
      message: error.message,
      stack: error.stack
    });
  }
}

// ÂàùÂßãÂåñÂä†ËΩΩ
window.addEventListener('DOMContentLoaded', loadDiaries);